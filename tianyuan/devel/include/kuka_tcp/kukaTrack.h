// Generated by gencpp from file kuka_tcp/kukaTrack.msg
// DO NOT EDIT!


#ifndef KUKA_TCP_MESSAGE_KUKATRACK_H
#define KUKA_TCP_MESSAGE_KUKATRACK_H

#include <ros/service_traits.h>


#include <kuka_tcp/kukaTrackRequest.h>
#include <kuka_tcp/kukaTrackResponse.h>


namespace kuka_tcp
{

struct kukaTrack
{

typedef kukaTrackRequest Request;
typedef kukaTrackResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct kukaTrack
} // namespace kuka_tcp


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kuka_tcp::kukaTrack > {
  static const char* value()
  {
    return "542cc9503392943f62224d9b971f53d6";
  }

  static const char* value(const ::kuka_tcp::kukaTrack&) { return value(); }
};

template<>
struct DataType< ::kuka_tcp::kukaTrack > {
  static const char* value()
  {
    return "kuka_tcp/kukaTrack";
  }

  static const char* value(const ::kuka_tcp::kukaTrack&) { return value(); }
};


// service_traits::MD5Sum< ::kuka_tcp::kukaTrackRequest> should match
// service_traits::MD5Sum< ::kuka_tcp::kukaTrack >
template<>
struct MD5Sum< ::kuka_tcp::kukaTrackRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kuka_tcp::kukaTrack >::value();
  }
  static const char* value(const ::kuka_tcp::kukaTrackRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kuka_tcp::kukaTrackRequest> should match
// service_traits::DataType< ::kuka_tcp::kukaTrack >
template<>
struct DataType< ::kuka_tcp::kukaTrackRequest>
{
  static const char* value()
  {
    return DataType< ::kuka_tcp::kukaTrack >::value();
  }
  static const char* value(const ::kuka_tcp::kukaTrackRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kuka_tcp::kukaTrackResponse> should match
// service_traits::MD5Sum< ::kuka_tcp::kukaTrack >
template<>
struct MD5Sum< ::kuka_tcp::kukaTrackResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kuka_tcp::kukaTrack >::value();
  }
  static const char* value(const ::kuka_tcp::kukaTrackResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kuka_tcp::kukaTrackResponse> should match
// service_traits::DataType< ::kuka_tcp::kukaTrack >
template<>
struct DataType< ::kuka_tcp::kukaTrackResponse>
{
  static const char* value()
  {
    return DataType< ::kuka_tcp::kukaTrack >::value();
  }
  static const char* value(const ::kuka_tcp::kukaTrackResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KUKA_TCP_MESSAGE_KUKATRACK_H
